/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wozniak_karol_prj;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import static wozniak_karol_prj.Wozniak_Karol_prj.okno;

/**
 *
 * @author Ja_Karol
 */
public class AddFrame extends javax.swing.JFrame {
    Connection myConn;
    Wozniak_Karol_prj okno = new Wozniak_Karol_prj();
    /**
     * Creates new form AddFrame
     */
    public AddFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfNrId = new javax.swing.JTextField();
        tfNazwa = new javax.swing.JTextField();
        tfMiejsce = new javax.swing.JTextField();
        tfDlugosc = new javax.swing.JTextField();
        tfWejscia = new javax.swing.JTextField();
        tfGlebokosc = new javax.swing.JTextField();
        cbTuryst = new javax.swing.JCheckBox();
        newButton = new javax.swing.JButton();
        updButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dodaj / Aktualizuj");

        jLabel1.setText("nr_identyf");

        jLabel2.setText("nazwa_jaskini");

        jLabel3.setText("miejscowosc");

        jLabel4.setText("turystyczna");

        jLabel5.setText("dlugosc");

        jLabel6.setText("liczba_wejsc");

        jLabel7.setText("glebokosc");

        newButton.setText("Dodaj wiersz");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        updButton.setText("Aktualizuj wiersz");
        updButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("   zaznaczyć w formularzu.");

        jLabel9.setText("* Żeby zaktualizować zawartość wiersza, proszę go najpierw");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfNrId, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                .addComponent(tfGlebokosc)
                                .addComponent(tfWejscia)
                                .addComponent(tfDlugosc)
                                .addComponent(tfMiejsce)
                                .addComponent(tfNazwa))
                            .addComponent(cbTuryst))
                        .addContainerGap(141, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(updButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 23, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfNrId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNazwa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfMiejsce, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbTuryst))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfDlugosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfWejscia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfGlebokosc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updButton)
                    .addComponent(newButton))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     public void Connection(){
        Statement sta;
        ResultSet myRS;
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            myConn=DriverManager.getConnection("jdbc:derby:Wozniak_Karol_bd");
            sta = myConn.createStatement();
            myRS = sta.executeQuery("select * from jaskinie");
               
            while(myRS.next()){
                System.out.println("DZIALA"); 
                System.out.println(myRS.getInt(1)); 
                if(myRS.getInt(1)==Integer.parseInt(tfNrId.getText())){
                    JOptionPane.showMessageDialog(null, "Blad - identyfikator zajety");
                    myConn.close();
                    return;
                    }
                }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
       
    }
    
    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed

       
	PreparedStatement prepSta;
	
        boolean box;
        try{
                if(tfNrId.getText().isEmpty() || tfNazwa.getText().isEmpty() || tfMiejsce.getText().isEmpty() || tfDlugosc.getText().isEmpty() || tfWejscia.getText().isEmpty() || tfGlebokosc.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Blad - nie wypelniono wszystkich pol");
                    return;
                }
                try {
                    Integer.parseInt(tfNrId.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [nr_identyf], prosze wprowadzic liczbe");
                    return;
                }
                 try {
                    Integer.parseInt(tfDlugosc.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [dlugosc], prosze wprowadzic liczbe");
                    return;
                }
                 try {
                    Integer.parseInt(tfWejscia.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [liczba_wejsc], prosze wprowadzic liczbe");
                    return;
                }
                 try {
                    Integer.parseInt(tfGlebokosc.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [glebokosc], prosze wprowadzic liczbe");
                    return;
                } 
                Connection();   
                
		prepSta=myConn.prepareStatement("insert into jaskinie values(?,?,?,?,?,?,?)");
		prepSta.setInt(1, Integer.parseInt(tfNrId.getText()));
                prepSta.setString(2, tfNazwa.getText());
                prepSta.setString(3, tfMiejsce.getText());
                if(cbTuryst.isSelected()){
                    prepSta.setBoolean(4, true);
                    box = true;
                }else{
                    prepSta.setBoolean(4, false);
                    box = false;
                }
                prepSta.setString(5, tfDlugosc.getText());
                prepSta.setString(6, tfWejscia.getText());
                prepSta.setString(7, tfGlebokosc.getText());
                prepSta.executeUpdate();
                
                int i1=Integer.parseInt(tfNrId.getText());
                String st1=tfNazwa.getText();
                String st2=tfMiejsce.getText();
                int i2=Integer.parseInt(tfDlugosc.getText());
                int i3=Integer.parseInt(tfWejscia.getText());
                int i4=Integer.parseInt(tfGlebokosc.getText());
                
                okno.NewLoadData(i1, st1, st2, box, i2, i3, i4);
		
                myConn.close();
	}catch(Exception ex){
		System.out.println(ex.getMessage());
	}
    }//GEN-LAST:event_newButtonActionPerformed

    private void updButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updButtonActionPerformed
        int i1, i2, i3, i4;
        String st1, st2;
	PreparedStatement prepSta;
        boolean box;
        try{
                if(tfNrId.getText().isEmpty() || tfNazwa.getText().isEmpty() || tfMiejsce.getText().isEmpty() || tfDlugosc.getText().isEmpty() || tfWejscia.getText().isEmpty() || tfGlebokosc.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Blad - nie wypelniono wszystkich pol");
                    return;
                }
                try {
                    Integer.parseInt(tfNrId.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [nr_identyf], prosze wprowadzic liczbe");
                    return;
                }
                 try {
                    Integer.parseInt(tfDlugosc.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [dlugosc], prosze wprowadzic liczbe");
                    return;
                }
                 try {
                    Integer.parseInt(tfWejscia.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [liczba_wejsc], prosze wprowadzic liczbe");
                    return;
                }
                 try {
                    Integer.parseInt(tfGlebokosc.getText());
                }catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Blad - niepoprawny typ danych dla [glebokosc], prosze wprowadzic liczbe");
                    return;
                }
                myConn=okno.ConnUpd(Integer.parseInt(tfNrId.getText()));
                if(okno.IsRowUnchecked()){
                    JOptionPane.showMessageDialog(null, "Blad - nie zaznaczono wiersza w formularzu");
                    myConn.close();
                    return;
                }
                if(tfNrId.getText().isEmpty() || tfNazwa.getText().isEmpty() || tfMiejsce.getText().isEmpty() || tfDlugosc.getText().isEmpty() || tfWejscia.getText().isEmpty() || tfGlebokosc.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Blad - nie wypelniono wszystkich pol");
                    myConn.close();
                    return;
                }
                prepSta=myConn.prepareStatement("update jaskinie set nr_identyf =?, nazwa_jaskini =?, miejscowosc =?, turystyczna =?, dlugosc =?, liczba_wejsc =?, glebokosc =? where nr_identyf =?");
                System.out.println("DZIALA????");
                prepSta.setInt(1, Integer.parseInt(tfNrId.getText()));
                prepSta.setString(2, tfNazwa.getText());
                prepSta.setString(3, tfMiejsce.getText());
                if(cbTuryst.isSelected()){
                    prepSta.setBoolean(4, true);
                    box = true;
                }else{
                    prepSta.setBoolean(4, false);
                    box = false;
                }
                prepSta.setString(5, tfDlugosc.getText());
                prepSta.setString(6, tfWejscia.getText());
                prepSta.setString(7, tfGlebokosc.getText());
                prepSta.setInt(8, okno.GetIdRowTable());
                prepSta.executeUpdate();
                
                i1=Integer.parseInt(tfNrId.getText());
                st1=tfNazwa.getText();
                st2=tfMiejsce.getText();
                i2=Integer.parseInt(tfDlugosc.getText());
                i3=Integer.parseInt(tfWejscia.getText());
                i4=Integer.parseInt(tfGlebokosc.getText());
                
                okno.UpdLoadData(i1, st1, st2, box, i2, i3, i4);
                //----------------------------------------------//
               
                
                myConn.close();
	}catch(Exception ex){
		System.out.println(ex.getMessage());
	}        
    }//GEN-LAST:event_updButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox cbTuryst;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton newButton;
    public javax.swing.JTextField tfDlugosc;
    public javax.swing.JTextField tfGlebokosc;
    public javax.swing.JTextField tfMiejsce;
    public javax.swing.JTextField tfNazwa;
    public javax.swing.JTextField tfNrId;
    public javax.swing.JTextField tfWejscia;
    private javax.swing.JButton updButton;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package wozniak_karol_prj;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ja_Karol
 */
public class Wozniak_Karol_prj extends javax.swing.JFrame {
    public static Wozniak_Karol_prj okno = new Wozniak_Karol_prj();
    Connection myConn;
    /**
     * Creates new form Wozniak_Karol_prj
     */
    public Wozniak_Karol_prj() {
        initComponents();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        NewButton = new javax.swing.JButton();
        DelButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Formularz");

        NewButton.setText("Dodaj/Aktualizuj");
        NewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewButtonActionPerformed(evt);
            }
        });

        DelButton.setText("Usun");
        DelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelButtonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "nr_identyf", "nazwa_jaskini", "miejscowosc", "turystyczna", "dlugosc", "liczba_wejsc", "glebokosc"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel1.setText("* Żeby zaktualizować wiersz proszę go najpierw zaznaczyć w tabeli");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(NewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(DelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NewButton)
                    .addComponent(DelButton))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(22, 22, 22))
        );

        setSize(new java.awt.Dimension(470, 299));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewButtonActionPerformed
        AddFrame adFrame = new AddFrame();
        adFrame.setVisible(true);
        int row = jTable1.getSelectedRow();
        if(row != -1){
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            adFrame.tfNrId.setText(Integer.toString((Integer)model.getValueAt(row, 0)));
            adFrame.tfNazwa.setText((String)model.getValueAt(row, 1));
            adFrame.tfMiejsce.setText((String)model.getValueAt(row, 2));
            adFrame.cbTuryst.setSelected((Boolean)model.getValueAt(row, 3));
            adFrame.tfDlugosc.setText(Integer.toString((Integer)model.getValueAt(row, 4)));
            adFrame.tfWejscia.setText(Integer.toString((Integer)model.getValueAt(row, 5)));
            adFrame.tfGlebokosc.setText(Integer.toString((Integer)model.getValueAt(row, 6)));
            
        }
        
    }//GEN-LAST:event_NewButtonActionPerformed

    private void DelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DelButtonActionPerformed
        PreparedStatement prepSta;
	Statement sta;
	ResultSet myRS;
               
        String sql = "delete from jaskinie where nr_identyf =?";
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
	try{
		Connection();
                if(okno.IsRowUnchecked()){
                    JOptionPane.showMessageDialog(null, "Blad - nie zaznaczono wiersza w formularzu");
                    myConn.close();
                    return;
                }
                int id = (Integer) (model.getValueAt(jTable1.getSelectedRow(), 0));
                System.out.println(id);
		prepSta = myConn.prepareStatement(sql);
                prepSta.setString(1, Integer.toString(id));
                System.out.println(Integer.toString(id));
                prepSta.execute();
                myConn.close();
        }catch(Exception ex){
		System.out.println(ex.getMessage());
	}
        if(jTable1.getSelectedRow()==-1){
            if(jTable1.getRowCount()==0){
                JOptionPane.showMessageDialog(null, "Blad - Tabela pusta");
            }else{
                JOptionPane.showMessageDialog(null, "Blad - Musisz wybrać wiersz do usuniecia");
            }
        }else{
            model.removeRow(jTable1.getSelectedRow());
        }
    }//GEN-LAST:event_DelButtonActionPerformed

    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                okno.setVisible(true);
            }
        });
    }
    
    public void Connection(){
 
        try{
            System.out.println("Start ladowania danych");
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            System.out.println("driver OK");
            myConn=DriverManager.getConnection
            //("jdbc:derby:C:\\Users\\Ja_Karol\\Desktop\\baza_jaskin\\Wozniak_Karol_bd");
            ("jdbc:derby:Wozniak_Karol_bd");
            System.out.println("baza OK");   
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
       
    }
    
    public Connection ConnUpd(int id){
         Statement sta;
        ResultSet myRS;
        int row, i=0;
        try{
            Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
            myConn=DriverManager.getConnection("jdbc:derby:Wozniak_Karol_bd");
            sta = myConn.createStatement();
            myRS = sta.executeQuery("select * from jaskinie");
            row = okno.jTable1.getSelectedRow();
            
            while(myRS.next()){
                System.out.println("TEST"); 
                System.out.println(myRS.getInt(1));
                if(i!=row){
                    if(myRS.getInt(1)==id){
                        JOptionPane.showMessageDialog(null, "Blad - identyfikator zajety");
                        myConn.close();
                        return null;
                    }
                }
                i++;
                }
        }catch(Exception ex){
            System.out.println(ex.getMessage());
        }
       return myConn;
    }
    
    public void LoadData(){
        
	Statement sta;
	ResultSet myRS;
	try{
		Connection();
		sta=myConn.createStatement(
			ResultSet.TYPE_SCROLL_INSENSITIVE,
			ResultSet.CONCUR_READ_ONLY);
		myRS=sta.executeQuery("select * from jaskinie");
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		while(myRS.next())
			model.addRow(new Object[]{myRS.getInt(1), myRS.getString(2), myRS.getString(3), myRS.getBoolean(4), myRS.getInt(5), myRS.getInt(6), myRS.getInt(7)});
		//----------------------------------------------//
                System.out.println("Dane zaladowane z bazy pomyslnie");
                myConn.close();
	}catch(Exception ex){
		System.out.println(ex.getMessage());
	}
    }
    
    public void NewLoadData(int i1, String st1, String st2, boolean bo, int i2, int i3, int i4){
        DefaultTableModel model = (DefaultTableModel) okno.jTable1.getModel();
        model.addRow(new Object[]{i1, st1, st2, bo, i2, i3, i4});
    }
    
     public void UpdLoadData(int i1, String st1, String st2, boolean bo, int i2, int i3, int i4){
        DefaultTableModel model = (DefaultTableModel) okno.jTable1.getModel();
        int row = okno.jTable1.getSelectedRow();
        System.out.println(row);
        model.setValueAt(i1,row,0);
        model.setValueAt(st1,row,1);
        model.setValueAt(st2,row,2);
        model.setValueAt(bo,row,3);
        model.setValueAt(i2,row,4);
        model.setValueAt(i3,row,5);
        model.setValueAt(i4,row,6);
    }
    
    public int GetIdRowTable (){
        DefaultTableModel model = (DefaultTableModel) okno.jTable1.getModel();
        int idRow = (Integer) (model.getValueAt(okno.jTable1.getSelectedRow(),0));
        return idRow;
    }
    
    public boolean IsRowUnchecked (){
        boolean row;
        row = okno.jTable1.getSelectionModel().isSelectionEmpty();
        return row;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DelButton;
    private javax.swing.JButton NewButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}